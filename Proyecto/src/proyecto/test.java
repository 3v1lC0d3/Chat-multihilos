package proyecto;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.*;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.FileSystemView;


public class test extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form Cliente
     */
    
    DataInputStream input;
    BufferedInputStream bis;
    BufferedOutputStream bos;
    JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
    byte[] byteArray;
    int in;
    Paquetes datos = new  Paquetes();
    public test() {
        initComponents();
        mensajes.setContentType("text/html");
        campo1.setContentType("text/html");
        Thread mihilo = new Thread(this);
        mihilo.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        emojis = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nick = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ip = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        sendFile = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mensajes = new javax.swing.JTextPane();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        campo1 = new javax.swing.JTextPane();

        emojis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emojisMouseClicked(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/1.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/2.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/10.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/xyz.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/12.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/3.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/4.png"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/6.png"))); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/8.png"))); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/5.png"))); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/9.png"))); // NOI18N
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto/7.png"))); // NOI18N
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout emojisLayout = new javax.swing.GroupLayout(emojis);
        emojis.setLayout(emojisLayout);
        emojisLayout.setHorizontalGroup(
            emojisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emojisLayout.createSequentialGroup()
                .addGroup(emojisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(emojisLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, emojisLayout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emojisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emojisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(emojisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        emojisLayout.setVerticalGroup(
            emojisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emojisLayout.createSequentialGroup()
                .addGroup(emojisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(emojisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jButton9)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(emojisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10)
                    .addComponent(jButton8)
                    .addComponent(jButton7)
                    .addComponent(jButton13)
                    .addComponent(jButton12)
                    .addComponent(jButton14))
                .addGap(5, 5, 5))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabel1.setText("Nickname");

        jLabel2.setText("IP");

        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        sendFile.setText("Adjuntar Archivo");
        sendFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendFileActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(mensajes);

        jButton2.setText("Emojis");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(campo1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nick, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(106, 106, 106)
                        .addComponent(sendFile))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(sendFile))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        System.out.println(evt.getKeyCode());
    }//GEN-LAST:event_formKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        enviarTexto();
        //java.net.URL url = getClass().getResource("1.png");
        //String mod = mensajes.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img></body></html>" ;
        //mensajes.setText(mod);
        //mensajes.setText(campo1.getText());
        campo1.setText("");
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void sendFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendFileActionPerformed
        datos.setArchivo(true);
        datos.setTexto(false);
        datos.setIp(ip.getText());
        datos.setNick(nick.getText());
        try {
            int returnValue = jfc.showOpenDialog(null);
            String path="";
            // int returnValue = jfc.showSaveDialog(null);
            
            if (returnValue == JFileChooser.APPROVE_OPTION) {
                File selectedFile = jfc.getSelectedFile();
                path = selectedFile.getAbsolutePath();
            }
            File file = new File(path);
            Socket cliente = new Socket("192.168.43.59",2512);//server port
            bis = new BufferedInputStream(new FileInputStream(file));
            bos = new BufferedOutputStream(cliente.getOutputStream());
            //Enviamos el nombre del fichero
            DataOutputStream dos = new DataOutputStream(cliente.getOutputStream());
            FileInputStream ficheroStream = new FileInputStream(file);
            datos.setNameA(file.getName());
            //Enviamos el fichero
            int tam = (int)file.length();
            byteArray = new byte[tam];
            ficheroStream.read(byteArray);
            datos.setTam(tam);
            datos.setArchi(byteArray);
            ObjectOutputStream paqueteDatos = new ObjectOutputStream(cliente.getOutputStream());
            paqueteDatos.writeObject(datos);
           
            bis.close();
            bos.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
        }
        datos.setArchivo(false);
    }//GEN-LAST:event_sendFileActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jPopupMenu1.add(emojis);
        jPopupMenu1.setVisible(true);
        jPopupMenu1.setLocation(jButton2.getLocationOnScreen());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        java.net.URL url = getClass().getResource("3.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void emojisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emojisMouseClicked
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_emojisMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        java.net.URL url = getClass().getResource("1.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img><p></p></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        java.net.URL url = getClass().getResource("2.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img><p></p></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        java.net.URL url = getClass().getResource("10.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img><p></p></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        java.net.URL url = getClass().getResource("xyz.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img><p></p></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        java.net.URL url = getClass().getResource("4.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img><p></p></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        java.net.URL url = getClass().getResource("12.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img><p></p></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        java.net.URL url = getClass().getResource("9.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img><p></p></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        java.net.URL url = getClass().getResource("5.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img><p></p></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        java.net.URL url = getClass().getResource("7.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img><p></p></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        java.net.URL url = getClass().getResource("6.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img><p></p></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        java.net.URL url = getClass().getResource("8.png");
        String mod = campo1.getText().replace("</body>","").replace("</html>","") + "<img src="+url+"></img><p></p></body></html>" ;
        campo1.setText(mod);
        jPopupMenu1.setVisible(false);
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new test().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane campo1;
    private javax.swing.JPanel emojis;
    private javax.swing.JTextField ip;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane mensajes;
    private javax.swing.JTextField nick;
    private javax.swing.JButton sendFile;
    // End of variables declaration//GEN-END:variables

     @Override
    public void run() {
        String [] names = {"1.png","2.png","3.png","4.png","5.png","6.png","7.png","8.png","9.png","10.png","xyz.png","12.png"};
        String []lista = {"<html>"," <head>","</head>","<body>","</body>","</html>"};

        String data = "";
        String data2="";
        //si es texto hacer tal
         
        try {
                ServerSocket receptor = new ServerSocket(4118);
                Socket clienteReceptor = new Socket();
                Paquetes paqueteRecibido = new Paquetes();
                
                while (true) {
                    clienteReceptor=receptor.accept();
                    
                    ObjectInputStream flujoReceptor = new ObjectInputStream(clienteReceptor.getInputStream());
                    paqueteRecibido=(Paquetes) flujoReceptor.readObject();
                    if(paqueteRecibido.isTexto()){
                        String cadeout = paqueteRecibido.getMensaje();
                        for(String i : names){
                    java.net.URL url = getClass().getResource(i);
                     //System.out.println(campo1.getText().contains(url.toString()));
                     if(paqueteRecibido.getMensaje().contains(i)){
                         //System.out.println(i);
                         cadeout = cadeout.replace(i,url.toString());
                         
                     }
                     
                }
                        System.out.println(cadeout);
                data = cadeout;//recibe
                data2 = mensajes.getText();//tenia
                for(String i : lista){
                    
                     data = data.replace(i, "");
                     data2 = data2.replace(i, "");
                     //System.out.println(i);
                }
                        //System.out.println(data2);
                //data = data.replace("<p style=\"margin-top: 0\">", "<p style=\"margin-top: 0\">");
                String mod ="<html>\n<head>\n</head>\n<body>\n"+ data2 +"<p></p>"+ data + "</body>\n</html>" ;
                       
                        //System.out.println(mod);
                        mensajes.setText("\n"+mod);
                        //mensajes.setText(paqueteRecibido.getMensaje());
                    }
                    else if(paqueteRecibido.isArchivo()){
                        //Buffer de 1024 bytes
                         String name = paqueteRecibido.getNameA();
                         
                         //convertir byte array a fichero =)
                         byte []fileArray = new byte[paqueteRecibido.getTam()];
                         fileArray = paqueteRecibido.getArchi();
                         
                         FileOutputStream fileOuputStream = new FileOutputStream(name);
			fileOuputStream.write(fileArray);
			fileOuputStream.close();
                    }
                    clienteReceptor.close();
                }
            } catch (IOException  | ClassNotFoundException ex) {
                System.err.println(ex.getMessage());
            }
    }
    
    
    
    public void enviarTexto(){
         String []lista = {"<html>"," <head>","</head>","<body>","</body>","</html>"};
         String [] names = {"1.png","2.png","3.png","4.png","5.png","6.png","7.png","8.png","9.png","10.png","xyz.png","12.png"};
         String data = "";
         String data2 = "";
            datos.setTexto(true);
            datos.setArchivo(false);
            try {
                //aqui
                //System.out.println(campo1.getText());
                //System.out.println(mensajes.getText());
                //System.out.println("------------------------------------------");
                data = campo1.getText();//recibe
                data2 = mensajes.getText();//tenia
                for(String i : lista){
                    
                     data = data.replace(i, "");
                     data2 = data2.replace(i, "");
                     //System.out.println(i);
                }
             
                data = data.replace("<p style=\"margin-top: 0\">", "<p style=\"margin-top: 0\">YO:");
                String mod ="<html>\n<head>\n</head>\n<body>\n"+ data2 + data + "</body>\n</html>" ;
                mensajes.setText(mod);
                //System.out.println(mensajes.getText());
                String cadeout = campo1.getText();
                 for(String i : names){
                    java.net.URL url = getClass().getResource(i);
                     //System.out.println(campo1.getText().contains(url.toString()));
                     if(campo1.getText().contains(url.toString())){
                         System.out.println("entra");
                         cadeout = cadeout.replace(url.toString(),i);
                         
                     }
                     System.out.println(cadeout);
                     
                }
                //System.out.println(cadeout);
                
                Socket cliente = new Socket("192.168.43.59",2512);//,server ip server port
                
               
                
                datos.setIp(ip.getText());
                datos.setNick(nick.getText());
                //datos.setMensaje(campo1.getText());
                datos.setMensaje(cadeout);
                
                ObjectOutputStream paqueteDatos = new ObjectOutputStream(cliente.getOutputStream());
                paqueteDatos.writeObject(datos);
                paqueteDatos.close();
                
                campo1.setText("");
                
                cliente.close();
            } catch (IOException ex) {
                
                System.err.println(ex.getMessage());
            }
            datos.setTexto(false);
            
        }
    
    
    
}
